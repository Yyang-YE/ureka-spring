name: CI-Build check

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    # repository checkout
    - name: Checkout
      uses: actions/checkout@v4

    # JDK 환경 설치
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'corretto' # AWS 최적화 배포판

    - name: application.properties 파일 설정
      run: |
        mkdir -p src/main/resources # 디렉토리 생성(이미 존재해도 괜찮음)
        echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.properties
    # Gradle 환경 설치
    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle  # 이 단계의 이름
      env:
        SPRING_PROFILES_ACTIVE: test  # Spring Boot의 활성 프로파일을 "test"로 설정
      run: ./gradlew clean build --stacktrace  # Gradle을 실행하여 빌드 수행
      shell: bash  # Bash 셸에서 실행


  # dependency-submission:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up JDK 17
  #     uses: actions/setup-java@v4
  #     with:
  #       java-version: '17'
  #       distribution: 'temurin'

  #   - name: Generate and submit dependency graph
  #     uses: gradle/actions/dependency-submission@af1da67850ed9a4cedd57bfd976089dd991e2582 # v4.0.0
